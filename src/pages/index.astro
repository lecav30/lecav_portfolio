---
import Layout from "../layouts/Layout.astro";
import Header from "../components/Header.astro";
import Footer from "../components/Footer.astro";
import Hero from "../components/Hero.astro";
import Services from "../components/Services.astro";
import Experience from "../components/Experience.astro";
import Projects from "../components/Projects.astro";
import Contact from "../components/Contact.astro";
---

<Layout title="Lecav's Portfolio">
  <header
    class="header max-w-[65rem] mx-auto fixed top-0 left-0 right-0 h-20 flex justify-between items-center px-8 z-50 backdrop-blur-md md:rounded-2xl md:mt-2 md:shadow-lg"
  >
    <Header />
  </header>
  <main class="space-y-20 w-[95%] mt-32 max-w-5xl mx-auto">
    <section
      id="hero"
      class="flex flex-col justify-end gap-12 items-center mt-24 md:mt-0 md:gap-8 md:justify-normal md:flex-row lg:justify-between"
    >
      <Hero />
    </section>
    <section
      id="services"
      class="flex flex-col gap-y-8 gap-x-10 items-center justify-center mt-8 md:flex-row md:flex-wrap xl:justify-between"
    >
      <Services />
    </section>
    <section
      id="experience"
      class="flex justify-center lg:justify-start items-center"
    >
      <Experience />
    </section>
    <section id="projects">
      <Projects />
    </section>
    <section id="contact" class="flex flex-col justify-center">
      <Contact />
    </section>
  </main>
  <footer class="w-[95%] max-w-5xl mx-auto">
    <Footer />
  </footer>
</Layout>

<script>
  const select = (el, all = false) => {
    el = el.trim();
    if (all) {
      return [...document.querySelectorAll(el)];
    } else {
      return document.querySelector(el);
    }
  };

  let theme = (() => {
    if (typeof localStorage !== "undefined" && localStorage.getItem("theme")) {
      return localStorage.getItem("theme");
    }
    if (window.matchMedia("(prefers-color-scheme: dark)").matches) {
      return "dark";
    }
    return "light";
  })();

  if (theme === "light") {
    document.documentElement.classList.remove("dark");
  } else {
    document.documentElement.classList.add("dark");
  }

  window.localStorage.setItem("theme", theme);

  let bars = select(".bars");
  let header = select(".header");
  let navbar = select(".navbar");
  let themeToggle = select("#themeToggle");
  let width = window.innerWidth;

  const open_navbar = () => {
    document.body.style.overflow = "hidden";
    navbar.classList.add("show-nav");
    navbar.classList.remove("hide");
    navbar.classList.toggle("active");
    header.classList.remove("backdrop-blur-md");

    if (theme === "light") header.classList.add("bg-white");
    if (theme === "dark") header.classList.add("bg-[#131313]");
  };

  const close_navbar = () => {
    document.body.style.overflow = "auto";
    navbar.classList.add("hide");
    navbar.classList.remove("show-nav");
    navbar.classList.toggle("active");
    header.classList.add("backdrop-blur-md");

    if (theme === "light") header.classList.remove("bg-white");
    if (theme === "dark") header.classList.remove("bg-[#131313]");
  };

  bars.addEventListener("click", () => {
    const isActive = navbar.classList.contains("active");
    isActive ? close_navbar() : open_navbar();
  });

  const onscroll = (el, listener) => {
    el.addEventListener("scroll", listener);
  };

  let navbar_links = select(".scrollto", true);

  navbar_links.forEach((navbar_link) => {
    navbar_link.addEventListener("click", () => {
      close_navbar();
    });
  });

  const navbar_links_active = () => {
    let position = window.scrollY + 200;

    navbar_links.forEach((navbar_link) => {
      if (!navbar_link.hash) return;

      let section = select(navbar_link.hash);

      if (!section) return;

      if (
        position >= section.offsetTop &&
        position <= section.offsetTop + section.offsetHeight
      ) {
        navbar_link.classList.add("active");
      } else {
        navbar_link.classList.remove("active");
      }
    });
  };

  themeToggle.addEventListener("click", () => {
    const element = document.documentElement;
    element.classList.toggle("dark");

    const isDark = element.classList.contains("dark");

    if (width <= 768) {
      close_navbar();
    }

    theme = isDark ? "dark" : "light";
    localStorage.setItem("theme", theme);
  });

  window.addEventListener("load", navbar_links_active);
  onscroll(document, navbar_links_active);
</script>
